<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch -->
<!--  <include file="$(find gazebo_ros)/launch/empty_world.launch">  -->
  <include file="$(find gazebo_ros)/launch/willowgarage_world.launch"> 

<!--    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/> -->

  </include>

  <!-- urdf xml robot description loaded on the Parameter Server-->
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find robot_arm)/urdf/04-robot_arm_servo.urdf.xacro'" /> 

<arg name="model" default="$(find robot_arm)/urdf/04-robot_arm_servo.urdf.xacro"/>
<arg name="rvizconfig" default="$(find robot_arm)/rviz/robot_arm.rviz"/>
<node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)"/>

<!-- Load joint controller configuration from YAML file to parameter server -->

<rosparam file="$(find robot_arm)/config/robot_arm_control.yaml" command="load"/>

<rosparam file="$(find robot_arm)/config/diff_drive.yaml" command="load"/>

<rosparam file="$(find robot_arm)/config/gripper.yaml" command="load"/>

<!-- load the controllers -->
<node name="robot_arm_controller_spawner" pkg="controller_manager" type="spawner"
  respawn="true" output="screen" 
   args="/Robot_Arm/joint_state_controller
         /Robot_Arm/Shoulder_pan_position_controller
         /Robot_Arm/Shoulder_roll_position_controller
         /Robot_Arm/Elbow_pan_position_controller
         /Robot_Arm/Elbow_pitch_position_controller
         /Robot_Arm/Gripper_pan_position_controller
         /Robot_Arm/Gripper_pitch_position_controller
         /Robot_Arm/Gripper_controller
         /Robot_Arm/Robot_arm_diffdrive_controller
      --shutdown-timeout 3"/>

  <!-- start robot state publisher -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen" >
    <param name="publish_frequency" type="double" value="50.0" />
  </node>

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
	args="-urdf -model Robot_Arm -param robot_description"/> 




</launch>


 


